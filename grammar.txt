# comments

program := <statement>*

statement := IF <expression> <statementblock>
           | ELSE <statementblock>
           | VAR <variable> (, <variable>)*
           | <variable> = <expression>
           | LOOP <statementblock>
           | WHILE <expression> <statementblock>
           | IMPORT <string> [WITH PREFIX <variable>]
           | UNIMPORT <string>
           | UNDEFINE <variable> (, <variable>)*
           | EXPORT <variable> (, <variable>)*
           | FUNC <variable> `(`[<variable> (, <variable>)*]`)` <statementblock>
           | PROC <variable> [<variable> (, <variable>)*] <statementblock>
           | <variable> [<expression> (, <expression>)*]
           | `(`<expression>`)` [<expression> (, <expression>)*]
           | BREAK | NEXT | DONE
           | RETURN <expression>

statementblock := { <program> }

expression := <variable>
						| <string>
						| <integer>
						| <bool>
						| <expression> <op> <expression>
						| `(`<expression>`)`
						| NOT <expression>
						| <expression>[<expression>]
						| <expression>`(`[<expression> (, <expression>)*]`)`

op := ==
	  | !=
	  | <
	  | <=
	  | >
	  | >=
	  | AND
	  | OR
	  | +
	  | -
	  | *
	  | %
	  | /
